plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java-library'
}

group = 'com.valletta'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.bootJar { enabled = false }
tasks.jar { enabled = true }

tasks.register("prepareKotlinBuildScriptModel") {}

/*
[참고]
- root project에서 Gradle 빌드 명령어를 실행한다.
  ex) pwd 입력 시 "$HOME/xxx/yyy/Spring-Boot-2.7.1-Multi-Module-Template"
- Api module을 실행시킬 jar 파일이 생성된 경로로 이동한다.
  ex) cd module-api/build/libs/
- 해당 Path로 이동 후 java -jar 명령어를 실행한다.
  ex) java -jar module-api-0.0.1-SNAPSHOT.jar

[Multi Module에서 Gradle 빌드 명령어 + jar 파일 실행 CLI]
- Gradle 빌드 명령어 :: root project
  -> ./gradlew clean :module-api:buildNeeded --stacktrace --info --refresh-dependencies -x test
- profile 지정 X
  -> java -jar module-api-0.0.1-SNAPSHOT.jar
- profile 지정 O
  -> java -jar -Dspring.profiles.active=local module-api-0.0.1-SNAPSHOT.jar
 */